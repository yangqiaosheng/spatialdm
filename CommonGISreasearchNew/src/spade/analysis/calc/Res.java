package spade.analysis.calc;

public class Res extends java.util.ListResourceBundle {
	static final Object[][] contents = new String[][] { { "Results_of_the", "Results of the calculations will be" }, { "stored_in_the", "stored in the database as new attribute(s)." },
			{ "You_may_edit_names_of", "You may edit names of new attributes" }, { "and_their_values_", "and their values:" }, { "Attribute_names", "Attribute names" }, { "Computes_the", "Computes the arithmetic mean (average) of " },
			{ "values_of_two_or_more", "values of two or more attributes in each row of the table." }, { "Select_at_least_two", "Select at least two numeric attributes or a parameter-dependent attribute " },
			{ "for_average", "for the computation of the arithmetic mean (average) of the values " }, { "Calculations_in_table", "Calculations in table" }, { "Sum_of_columns", "Sum of columns" }, { "Sum_of", "Sum of" },
			{ "Percentages_and", "Percentages and ratios" }, { "Change_difference", "Change, difference" }, { "Arbitrary_formula", "Arbitrary formula" }, { "Average_among_columns", "Average among columns" },
			{ "Variance_among", "Variance among columns" }, { "Count_value", "Count value occurrences" }, { "Weighted_average", "Weighted average among columns" }, { "Rule_validation", "Rule validation" },
			{ "Ideal_Point_Analysis", "Ideal Point Analysis" }, { "Values_Order", "Values -> Order" }, { "Ordered_Weighted", "Ordered Weighted Averaging" }, { "Similarity_distance_", "Similarity (distance)" },
			{ "Similarity", "Similarity (classification)" }, { "Dominant_attribute", "Dominant attribute classification" }, { "For_two_numeric", "For two numeric attributes computes their " },
			{ "arithmetic_difference", "arithmetic difference, or ratio, or the difference in relation to one " }, { "of_the_attributes_", "of the attributes." }, { "Select_exactly_two", "Select exactly two numeric attributes " },
			{ "for_the_computation1", "for the computation of their absolute or relative difference or ratio" }, { "For_each_table_row", "For each table row finds which of two or " },
			{ "more_selected", "more selected attributes dominates the others by its values. Different " }, { "dominance_measures", "dominance measures are possible.\n The result consists of 2 new attributes: " },
			{ "1the_dominating", "1) the dominating attribute (qualitative); 2) the degree of dominance (numeric)." }, { "for_dominance", "for the computation of the dominance among their values." },
			{ "Divides_values_of", "Divides values of each of the selected " }, { "attributes_by_values", "attributes by values of another selected attribute, or by the sum of values " },
			{ "of_these_attributes", "of these attributes, or by a fixed number. Suitable for calculation of " }, { "proportions_of_parts", "proportions of parts in a whole." }, { "Select_one_or_more", "Select one or more numeric attributes " },
			{ "to_be_divided_by", "to be divided by another attribute (to be selected later on), or by the " }, { "sum_of_these", "sum of these attributes, or by a fixed number (to be selected later on)." },
			{ "Normalize_attributes_", "Normalize attributes:" }, { "divided_by", "divided by" }, { "their_sum", "their sum" }, { "Select_attribute", "Select attribute" }, { "number_", "number:" },
			{ "Compute_percentages", "Compute percentages or ratios" }, { "divided_by1", " divided by " }, { "sum", "sum" }, { "Attribute", "Attribute" }, { "Orders_table_rows", "Orders table rows according to the " },
			{ "descending_order_of", "descending order of values of a numeric attribute and produces a new " }, { "integer_attribute", "integer attribute that indicates for each row its order." },
			{ "Select_exactly_one", "Select exactly one numeric attribute " }, { "for_finding_the_order", "for finding the order of the table rows." }, { "Select_ordering", "Select ordering direction:" }, { "Decrease", "Decrease" },
			{ "Increase", "Increase" }, { "Ordering", "Ordering" }, { "order_", " order: " }, { "Aggregates_values_of", "Aggregates values of multiple criteria into a single evaluation " },
			{ "score_according_to_a", "score according to a user-defined decision strategy" }, { "representing_criteria", "representing criteria for evaluation" }, { "Rule_Validator", "Rule Validator Scatter Plot" },
			{ "Computes_the_degree", "Computes the degree of similarity (distance) " }, { "of_each_object", "of each object (characterised by one table row) to a selected object or " },
			{ "agroup_of_objects_The", "a group of objects. The distance is defined in terms of values of some " }, { "selected_attributes_", "selected attributes." },
			{ "for_the_estimation_of", "for the estimation of the similarity between objects." },
			{ "Special_metric_for", "Special metric for time series data.\nIt reflects number of time moments\n" + "with similar change of values.\n\nDo not use with non-temporal data!" },
			{ "Determines_for_each", "Determines for each object (characterised by " }, { "one_table_row_to", "one table row) to which of two selected objects or groups of objects it " },
			{ "is_closer_more", "is closer (more similar). The distance is defined in terms of values of some " }, { "for_the_estimation_of2", "for the estimation of the similatity between objects." },
			{ "Special_metric_for2", "Special metric for time series data.\nIt reflects number of time moments\n" + "with similar change of values.\n\nDo not use with non-temporal data!" }, { "Sum_of", "Sum of " },
			{ "Computes_the1", "Computes the arithmetic sum of " }, { "for_the_computation2", "for the computation of the arithmetic sum of their values." }, { "For_a_group_of", "For a group of homogeneous attributes " },
			{ "calculates_in_each", "calculates in each table row the number of occurrences of each value. " }, { "Produces_as_many_new", "Produces as many new attributes as there are different values for all " },
			{ "selected_attributes", "selected attributes in total. Applicable to attributes with small number " }, { "of_possible_values_", "of possible values." }, { "Select_two_or_more", "Select two or more homogeneous attributes " },
			{ "for_counting_value", "for counting value occurrences in a table row." }, { "Number_of_different", "Number of different values is to big: >=" }, { "Variance_", "Variance: " },
			{ "Computes_the3", "Computes the statistical variance between " }, { "for_the_computation3", "for the computation of the statistical variance between their values " }, { "Weighted_average1", "Weighted average calculation" },
			{ "Calculates_weighted", "Calculates weighted average of several attributes" }, { "Select_at_least_two1", "Select at least two numeric attributes or a parameter-dependent attribute." }, { "Aver", "Average: " },
			{ "Arith", "Arithmetics" }, { "Stat", "Statistics" }, { "Decis", "Decision support" }, { "Mult", "Multidimensional analysis" }, { "Cannot1", "Cannot construct a calculator for the method " },
			{ "Cannot2", "Cannot construct a calculator: " }, { "Wrong", "Wrong method identifier: " }, { "The_method", "The method " }, { "isnotav", " is not available!" }, { "isnotap", " is not applicable to the selected attributes!" },
			{ "calcerr", "Calculation error!" }, { "unkncalcm", "Unknown calculation method: " }, { "isnotf", " is not found among the available methods" }, { "inappds", "Inappropriate data source; DataTable required!" },
			{ "nonorm", "No normalization (absolute values)" }, { "Med", "Median and quartiles" }, { "Mea", "Mean and standard deviation" },
			{ "Att1", "Attributes are presented on a single scale of their absolute values without any normalisation." },
			{ "Att2", "Attributes are normalised onto a scale from 0.0 to 1.0 such that " + "0.0 corresponds to the minumum value and 1.0 corresponds to the maximum " + "of each attribute." },
			{ "Att3", "Attributes are presented on a scale with the median values of each " + "attribute aligned in the centre and the quartiles also aligned." },
			{ "Att4", "Attributes are presented on a scale with the mean values of each " + "attribute aligned in the centre and the means +/- 1 standard deviation " + "also aligned." }, { "Domacalc", "Dominant attribute calculation" },
			{ "Computes_the4", "Computes the arbitrary formula " }, { "involving_arithmetic", "involving arithmetic constants, values of attributes in each row " }, { "of_the_table_and", "of the table, and elementary fuctions" },
			{ "Select_at_least_one", "Select at least one numeric attribute " }, { "for_the_computation4", "for the computation of the arithmetic sum of their values." }, { "Specify_the_formula", "Specify the formula" },
			{ "Invalid_formula_", "Invalid formula!" }, { "Formula_with_", "Formula with " }, { "ordwa", "Ordered Weighted Averaging" }, { "order_weights", "Order weights" }, { "Criterion_weights", "Criterion weights" },
			{ "classres", "Classify results" }, { "Close", "Close" }, { "South", "South" }, { "Wfhv", "Weight for highest values" }, { "Wflv", "Weight for lowest values" }, { "Uscow", "Use slider to change this order weight" },
			{ "Sowfh", "Set order weight for highest weighted standardized criterion value " + "of each alternative" }, { "Sowfl", "Set order weight for lowest weighted standardized criterion value " + "of each alternative" },
			{ "Sowfi", "Set order weight for an intermediate criterion value of each alternative" }, { "stwlc", "Set to WLC" }, { "Sewff", "Set equal weights for full tradeoff between good and bad values" }, { "Sta", "Set to AND" },
			{ "Gfww", "Give full weight to worst value of each alternative (pessimistic strategy)" }, { "Random", "Random" }, { "Srow", "Set random order weights" }, { "Sto", "Set to OR" },
			{ "Gfwb", "Give full weight to best value of each alternative (optimistic strategy)" }, { "Risk", "Risk" }, { "Dispersion", "Dispersion" }, { "Tradeoff", "Tradeoff" }, { "Irbiww", "Increase risk by increasing weight of best value" },
			{ "rrbiw", "Reduce risk by increasing weight of worst value" }, { "It", "Increase tradeoff by reducing maximal weight" }, { "Rt", "Reduce tradeoff by increasing maximal weight" },
			{ "Id", "Increase dispersion by reducing maximal weight" }, { "Rd", "Reduce dispersion by increasing maximal weight" }, { "Sorry", "Sorry, adding/removing attributes currently not supported in OWA" },
			{ "ErrorOWA", "Error in Ordered Weighted Averaging method" }, { "Ccrd", "Compute Change / Ratio / Difference" }, { "Fta", "For these attributes:" }, { "Invert", "Invert" }, { "Cc", "Compute changes etc." }, { "Dominant:", "Dominant:" },
			{ "Tod", "Type of dominance ?" }, { "Maximum", "Maximum" }, { "Minimum", "Minimum" }, { "An", "Attribute normalization ?" }, { "Auic", "Attributes used in calculations: " }, { "Lstw", "Let\'s shake the weights !" },
			{ "ibw", "iterations between weights" }, { " and", " and" }, { "wsbnn", "weight should be non-negative" }, { "cwsbbmm", "current weight should be between Min and Max" }, { "wnitnf", "wrong number in the numeric field" },
			{ "wsblt", "weight should be less than 1.0" }, { "wnoi", "wrong number of iterations" }, { "Supportsmcs", "Supports multi-criteria selection: \"wraps\" " },
			{ "vosa", "values of several attributes (selection criteria) in a single evaluation " }, { "Tcmd", "score. The criteria may differ in relative importance that is reflected " }, { "itw", "in their weights." },
			{ "rycs", "representing your selection criteria." }, { "Ipdsm", "\" Ideal point\" decision support method" }, { "Rsawcw", "Run sensitivity analysis with current weights ..." }, { "Make_decision", "Make decision" },
			{ "sap", "Sensitivity analysis parameters" }, { "vitr", "Validates IF-THEN rules" }, { "Scaatt", "Select condition attribute(s) and the target attribute of the rule" }, { "itrn", "IF-THEN Rule N " }, { "No", "No" }, { "Left", "Left" },
			{ "Right", "Right" }, { "Both", "Both" }, { " Validation", " Validation" }, { "Focal points: ", "Focal points: " }, { "Dynamic update", "Dynamic update" }, { "Rule text", "Rule text" }, { "Cspw", "Conditions scatter-plot window" },
			{ "support", "support" }, { "do_not_support", "do not support" }, { "not_relevant", "not relevant" }, { "contradict", "contradict" }, { "sup", "support (quality in respect to the conditions)" },
			{ "cov", "coverage (quality in respect to the target)" }, { "Sias", "Similarity in attribute space" }, { "Auic", "Attributes used in calculations: " }, { "Continue", "Continue" }, { "Distance_to ", "Distance to " },
			{ "Htctd", "How to compute the distance to the group ?" }, { "Dttmc", "Distance to the mass center of the group" }, { "Mdtgm", "Minimal distance to group members" }, { "Adtgm", "Average distance to group members" },
			{ "Metric:", "Metric:" }, { "Robj", "Reference object(s)" }, { "rebnf", "* record expected but not found, id=<" }, { "Cbs", "Classification by similarity" }, { "Sfcs", "Select 1st class sample(s)" }, { "fcs", "1st class samples:" },
			{ "S2cs", "Select 2nd class sample(s)" }, { "Classification: ", "Classification: " }, { "Htctdttg", "How to compute the distance to the group?" }, { "Dttmcotg", "Distance to the mass center of the group" },
			{ "Mdtgm", "Minimal distance to group members" }, { "Adtgm", "Average distance to group members" }, { "Dtfc", "Distance threshold for classification:" }, { "Set_equal_weights", "Set equal weights" },
			{ "YCAAM", "You can always add more criteria by selecting in this drop-down list" }, { "Ycara", "You can always remove any criterion using this drop-down list" }, { "Add_criterion", "Add criterion" },
			{ "Remove_criterion", "Remove criterion" }, { "Srob", "Select reference object(s)" }, { "Chtocc", "Click here to change colour" },
			{ "Costtbm", "Cost (to be minimized) and benefit (to be maximized) criteria are " + "distinquished. Click the arrow to change type of the criterion" }, { "Ustcw", "Use sliders to change weights of attributes" },
			{ "percentage", "Percentage" }, { "ratio", "Ratio" }, { "sel_attr", "Selected attributes:" }, { "div_by", "Divide by:" }, { "another_attribute", "another attribute:" }, { "a_constant", "a constant:" }, { "compute", "Compute:" },
			{ "_in_", " in " }, { "_of_", " of " }, { "Rule_N_", "Rule N " }, { "_of", "% of" }, { "IF_", "IF:" }, { "THEN_", "THEN:" }, { "attributes_by_values1", "attributes by values of another selected attribute, or by the sum " },
			{ "of_values", "of values " }, { "of_these_attributes1", "of these attributes, or by a fixed number. Suitable for calculation " }, { "of", "of " },
			{ "to_be_divided_by1", "to be divided by another attribute (to be selected later on), or " }, { "by_the", "by the " }, { "sum_of_these1", "sum of these attributes, or by a fixed number (to be selected later " }, { "on_", "on)." },
			{ "Average", "Average" }, { "Variance:", "Variance: " }, { "Weighted_average", "Weighted average" }, { "Decrease", "Decrease" }, { "Increase", "Increase" }, { "order", "order" }, { "Criterion_weight ", "Criterion_weight " },
			{ "Samples", "Samples" }, { "Like ", "Like " }, { "Non_classified", "Non_classified" }, { "PS", "Pareto Set Calculator" }, { "PS_expl", "Builds set of non-dominated options" }, { "PS_empty", "Pareto Set is empty" },
			{ "Tolerance", "Tolerance" }, { "Def_PS", "Definition of Pareto Set:" }, { "Comp_by_VG", "Compute by method of Prof. V.Gitis" }, { "debug", "debug" }, { "equivalent", "equivalent" }, { "better", "better" }, { "worse", "worse" },
			{ "incomparable", "incomparable" }, { "MCC_expl", "Classifies options in relation to a selected one" }, { "MCC", "Multiple Criteria Comparison" }, { "Ref_val_of_criteria", "Reference values of the criteria:" },
			{ "Sync_Rel_Val", "Synchronise relative values" }, { "Roptions", "Reference option(s)" }, { "best", "Best" }, { "worst", "Worst" }, { "Compare to", "Compare to" }, { "values", "values" }, { "from", "from" },
			{ "no_param_corresp", "No correspondence between parameters!" }, { "The_attribute", "The attribute" }, { "dep_on_several_params", "depends on several parameters" },
			{ "Please_indicate", "Please indicate which of the parameters are subject to " + "the aggregation and which of them must remain variable:" }, { "aggregate", "aggregate" }, { "vary", "vary" }, { "Values", "Values" },
			{ "Indicate_var_par", "Indicate varying parameters" }, { "Nothing_to_aggregate", "Nothing to aggregate!" }, { "Aggregate_at_least_one", "Please select at least one parameter to be subject to aggregation!" },
			{ "attr_not_specified", "The attribute to divide by is not specified!" }, { "ill_divide_value", "Illegal value to divide by!" }, { "too_many_attributes", "Too many attributes selected!" },
			{ "select_one_with_many_params", "Select a single attribute depending on two or more parameters." }, { "total", "total" }, { "calc_in_progress", "Calculation in progress" }, { "calc_finished", "Calculation finished!" },
			{ "Computes_percentiles", "Computes percentiles from multiple attributes in each " + "row of the table" }, { "Select_attr_for_percentiles", "Select a group of numeric attributes for " + "the computation of percentiles." },
			{ "Specify_percentiles", "Specify the percentiles (from 0 to 100) to be computed:" }, { "Percentiles", "Percentiles" }, { "No_percentiles", "No percentile values given!" }, { "Illegal_percentile", "Illegal percentile value" },
			{ "percentile_of", "percentile of" }, { "Example", "Example" }, { "single_param_dep_attr_selected", "You have selected a single " + "parameter-dependent attribute." }, { "how_to_use", "How do you intend to use it in the formula?" },
			{ "attr_whole1", "The attribute as a whole is an element of the formula." }, { "attr_whole2", "The result will be an attribute depending on the same " + "parameters." },
			{ "indiv_columns1", "individual columns belonging to the attribute are " + "elements of the formula." }, { "indiv_columns2", "The result will be a parameter-independent attribute." }, { "par_dep_attr", "Parameter-dependent attribute" },
			{ "show_on_map", "Show computation results on map" }, { "want_show_on_map", "Do you wish the computation results to be represented on a map?" }, { "main_map", "Show the results on the map in the main window" },
			{ "new_map", "Show the results in a new map window" }, { "no_map", "Do not show the results on a map" }, { "failed_make_map", "Failed to construct a new map window!" }, { "window_name", "Window name" } };

	public Object[][] getContents() {
		return contents;
	}
}
