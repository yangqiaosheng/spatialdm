<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
	<display-name>OracleSpatialWeb</display-name>

	<session-config>
		<session-timeout>300</session-timeout>
	</session-config>

	<mime-mapping>
		<extension>kml</extension>
		<mime-type>application/vnd.google-earth.kml+xml</mime-type>
	</mime-mapping>

	<!--
		- Key of the system property that should specify the root directory of this - web app. Applied by WebAppRootListener or Log4jConfigListener.
	-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>prediction_ped.root</param-value>
	</context-param>

	<!--
		- Location of the Log4J config file, for initialization and refresh
		checks. - Applied by Log4jConfigListener.
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>

	<!--
		- Location of the XML file that defines the root application context. /WEB-INF/classes/beans.xml for JavaBeans initialization,
		/WEB-INF/classes/schedulingContext-timer.xml for Timer scheduling.
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
<!--		classpath:net/bull/javamelody/monitoring-spring.xml-->
			classpath:schedulingContext-timer.xml
	    </param-value>
	</context-param>

	<!--
		- Load the Log4J configuration
	-->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>


	<!--
		- Loads the root application context of this web app at startup,
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!--
		character encoding for all requests.
	-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<!--
			enforce this filter's encoding in any case ("forceEncoding"="true")
		-->
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<filter>
		<filter-name>UrchinFilter</filter-name>
		<filter-class>com.cj.urchin.UrchinFilter</filter-class>
		<init-param>
			<param-name>code</param-name>
			<param-value>UA-22122163-1</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrchinFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<servlet>
		<description>Retrieve the data to create a kml with different zoom levels</description>
		<display-name>RequestKml</display-name>
		<servlet-name>RequestKml</servlet-name>
		<servlet-class>de.fraunhofer.iais.spatial.web.servlet.RequestKmlServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>RequestKml</servlet-name>
		<url-pattern>/RequestKml</url-pattern>
	</servlet-mapping>

	<!-- allow directory listing of this web application only -->
	<servlet>
		<servlet-name>DirectoryListing</servlet-name>
		<servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>listings</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DirectoryListing</servlet-name>
		<url-pattern>/logs/</url-pattern>
	</servlet-mapping>

	<!-- Define reference to the user database for looking up roles -->
	<resource-env-ref>
		<description>
      Link to the UserDatabase instance from which we request lists of
      defined role names.  Typically, this will be connected to the global
      user database with a ResourceLink element in server.xml or the context
      configuration file for the Manager web application.
    </description>
		<resource-env-ref-name>users</resource-env-ref-name>
		<resource-env-ref-type>org.apache.catalina.UserDatabase</resource-env-ref-type>
	</resource-env-ref>

	<!-- Define a Security Constraint on this Application -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>HTMLManger and Manager command</web-resource-name>
			<url-pattern>/logs/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<!-- NOTE:  This role is not present in the default users file -->
			<role-name>developer</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Define the Login Configuration for this Application -->
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>Tomcat Manager Application</realm-name>
	</login-config>

	<!-- Security roles referenced by this web application -->
	<security-role>
		<description>
      The role that is required to log in to the Manager Application
    </description>
		<role-name>developer</role-name>
	</security-role>
</web-app>